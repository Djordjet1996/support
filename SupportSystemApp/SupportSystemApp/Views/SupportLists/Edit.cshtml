@model SupportSystemApp.Models.SupportList


@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
        <h4>SupportList</h4>

        <div class="row">
            
                <div class="col-6 col-sm-8"
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.TicketNo)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-6">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Status, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-6">
                            @Html.DropDownList("Status", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Category, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-6">
                            @Html.DropDownList("Category", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Severity, "Severity", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-6">
                            @Html.DropDownList("Severity", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Severity, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Priority, "Priority", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-6">
                            @Html.DropDownList("Priority", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RaisedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-6">
                            @Html.EditorFor(model => model.RaisedBy, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RaisedBy, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RaisedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-6">
                            @Html.EditorFor(model => model.RaisedOn, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RaisedOn, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DueOn, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-6">
                            @Html.EditorFor(model => model.DueOn, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DueOn, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ResolvedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-6">
                            @Html.EditorFor(model => model.ResolvedOn, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ResolvedOn, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IDSectionList, "IDSectionList", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-sm-6">
                            @Html.DropDownList("IDSectionList", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.IDSectionList, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-sm-6">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
        </div>
                <div class="col-6 col-sm-4">
                    <p><button onclick="location.href='@Url.Action("StartChat", "Chat")';return false;">+ Leave a comment</button>
                        <div id="messages"></div>
                        @using (Ajax.BeginForm("Chat", new AjaxOptions()
                        {
                            HttpMethod = "POST",
                            InsertionMode = InsertionMode.InsertAfter,
                            UpdateTargetId = "messages"
                        })) {}

                    </p>

                </div>
</div>
            

  

}

<div class="col-sm-2">
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
